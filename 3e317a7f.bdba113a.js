(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{164:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return d})),r.d(t,"default",(function(){return p}));var o=r(1),n=r(9),a=(r(0),r(209)),i={title:"Reference a Third Party Library in Geocortex Workflow Server",sidebar_label:"Reference a Third Party Library"},c={id:"workflow/reference-third-party-library-server",title:"Reference a Third Party Library in Geocortex Workflow Server",description:"As discussed in [implement custom activity](implement-custom-activity-server.mdx), deploying a custom activity involves copying the build output of a .NET Standard or .NET Core project to a folder in the Geocortex Workflow Server deployment. In order to reference third party libraries, we will have to also ensure all the dependencies are copied into this folder.",source:"@site/docs/workflow/reference-third-party-library-server.mdx",permalink:"/dev-center/docs/workflow/reference-third-party-library-server",editUrl:"https://github.com/geocortex/dev-center/edit/master/docs/workflow/reference-third-party-library-server.mdx",sidebar_label:"Reference a Third Party Library",sidebar:"workflow",previous:{title:"Implement a Custom Activity for Geocortex Workflow Server",permalink:"/dev-center/docs/workflow/implement-custom-activity-server"},next:{title:"Concepts",permalink:"/dev-center/docs/workflow/concepts-key-concepts"}},d=[{value:"Setup your Custom Code",id:"setup-your-custom-code",children:[]},{value:"Add a Third Party library",id:"add-a-third-party-library",children:[]},{value:"Build and Copy the Project Output",id:"build-and-copy-the-project-output",children:[{value:".NET Core Project",id:"net-core-project",children:[]},{value:".NET Standard Project",id:"net-standard-project",children:[]}]}],l={rightToc:d};function p(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"As discussed in ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"/dev-center/docs/workflow/implement-custom-activity-server"}),"implement custom activity"),", deploying a custom activity involves copying the build output of a .NET Standard or .NET Core project to a folder in the Geocortex Workflow Server deployment. In order to reference third party libraries, we will have to also ensure all the dependencies are copied into this folder."),Object(a.b)("h2",{id:"setup-your-custom-code"},"Setup your Custom Code"),Object(a.b)("p",null,"Follow the instructions in ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"/dev-center/docs/workflow/implement-custom-activity-server"}),"implement custom activity")," to implement and deploy a basic custom activity."),Object(a.b)("h2",{id:"add-a-third-party-library"},"Add a Third Party library"),Object(a.b)("p",null,"Add a third party library via a nuget package, and use it in your custom activity."),Object(a.b)("h2",{id:"build-and-copy-the-project-output"},"Build and Copy the Project Output"),Object(a.b)("p",null,"Build the project to output the assemblies. What you have to copy is different depending on if you started with a .NET Standard project or a .NET Core project."),Object(a.b)("h3",{id:"net-core-project"},".NET Core Project"),Object(a.b)("p",null,"If you created a .NET Core project, Visual Studio will treat this as an Application and bundle both the user defined libraries and external libraries. This means that everything you need to copy exists in the built output folder. Follow the instructions to ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"/dev-center/docs/workflow/implement-custom-activity-server#deploy-the-activity"}),"Deploy the Activity"),"."),Object(a.b)("div",{className:"admonition admonition-important alert alert--info"},Object(a.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("div",Object(o.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(o.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(a.b)("path",Object(o.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(a.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("p",{parentName:"div"},"It's important to make sure that the ",Object(a.b)("inlineCode",{parentName:"p"},"*.exe")," file and corresponding dll produced by a .NET Core project ",Object(a.b)("strong",{parentName:"p"},"are not copied"),"."))),Object(a.b)("h3",{id:"net-standard-project"},".NET Standard Project"),Object(a.b)("p",null,"If you created a .NET Standard project, Visual Studio will treat this as a library and not bundle dependencies as it expects them to be installed by the package consumer. You have to go through each dependency and ensure that it and each of it's child package dependencies have their assemblies copied into the ",Object(a.b)("inlineCode",{parentName:"p"},"CustomAssemblies")," folder. Then you can ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"/dev-center/docs/workflow/implement-custom-activity-server#deploy-the-activity"}),"Deploy the Activity")," by copying the user defined dlls."))}p.isMDXComponent=!0},209:function(e,t,r){"use strict";r.d(t,"a",(function(){return s})),r.d(t,"b",(function(){return m}));var o=r(0),n=r.n(o);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function d(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=n.a.createContext({}),p=function(e){var t=n.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c({},t,{},e)),r},s=function(e){var t=p(e.components);return n.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},b=Object(o.forwardRef)((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),s=p(r),b=o,m=s["".concat(i,".").concat(b)]||s[b]||u[b]||a;return r?n.a.createElement(m,c({ref:t},l,{components:r})):n.a.createElement(m,c({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=b;var c={};for(var d in t)hasOwnProperty.call(t,d)&&(c[d]=t[d]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=r[l];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"}}]);