(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{201:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return m})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return b}));var o=t(1),i=t(9),a=(t(0),t(252)),s=t(273),p=t(276),r=t(275),c=(t(271),t(270),{title:"App Config for a Component",description:"Geocortex Mobile - Learn how to make a component participate in app config."}),m={id:"mobile/usecases-implement-component-participate-app-config",title:"App Config for a Component",description:"Geocortex Mobile - Learn how to make a component participate in app config.",source:"@site/docs/mobile/usecases-implement-component-participate-app-config.mdx",permalink:"/docs/mobile/usecases-implement-component-participate-app-config",editUrl:"https://github.com/geocortex/dev-center/edit/master/docs/mobile/usecases-implement-component-participate-app-config.mdx",sidebar:"mobile",previous:{title:"Custom Component with UI",permalink:"/docs/mobile/usecases-implement-component-with-ui"},next:{title:"Custom Service",permalink:"/docs/mobile/usecases-implement-service"}},l=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Create a Skeleton App Config Definition",id:"create-a-skeleton-app-config-definition",children:[]},{value:"Consume the Configuration in the Component",id:"consume-the-configuration-in-the-component",children:[]},{value:"Define Configuration Values in the app.json",id:"define-configuration-values-in-the-appjson",children:[]}],u={rightToc:l};function b(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"A component can optionally participate in the global app config. This allows multiple instances of the component to be configured in different ways, or for component behavior to be changed without having to edit custom code."),Object(a.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(a.b)("p",null,"Complete the previous use case, ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/mobile/usecases-implement-component-with-ui"}),"Implement a Custom Component"),". This article will extend that component to consume custom app config."),Object(a.b)("h2",{id:"create-a-skeleton-app-config-definition"},"Create a Skeleton App Config Definition"),Object(a.b)("p",null,"Create a new file ",Object(a.b)("inlineCode",{parentName:"p"},"HarmlessComponentConfiguration.cs"),". This class defines a new app item type ",Object(a.b)("inlineCode",{parentName:"p"},"harmless-component-config"),". This app item type will be used as configuration for the ",Object(a.b)("inlineCode",{parentName:"p"},"HarmlessComponent"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-csharp"}),'using App1.Configuration;\nusing Geocortex.API;\nusing Geocortex.Mobile.Infrastructure.App;\nusing System;\n\n[assembly: AppItem(HarmlessComponentConfiguration.ConfigItemtype, typeof(HarmlessComponentConfiguration))]\nnamespace App1.Configuration\n{\n    public class HarmlessComponentConfiguration : VisualAppItem\n    {\n        public const string ConfigItemtype = "harmless-component-config";\n\n        public string ConfigTitle { get; private set; }\n\n        public string ConfigDescription { get; private set; }\n\n        public HarmlessComponentConfiguration()\n            : this(Guid.NewGuid().ToString())\n        {\n        }\n\n        public HarmlessComponentConfiguration(string id)\n            : this(new Properties { ["id"] = id })\n        {\n        }\n\n        public HarmlessComponentConfiguration(Properties properties) :\n            base(properties, ConfigItemtype)\n        {\n            // properties is an object corresponding to the config defined in the app.json\n            if (properties.TryGetValue("title", out var title))\n            {\n                ConfigTitle = title as string ?? "Default Title";\n            }\n\n            if (properties.TryGetValue("description", out var text))\n            {\n                ConfigDescription = text as string ?? "Default description.";\n            }\n        }\n\n        public override object CreateDefault()\n        {\n            return new HarmlessComponentConfiguration();\n        }\n    }\n}\n')),Object(a.b)("div",{className:"admonition admonition-info alert alert--info"},Object(a.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(o.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(o.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(a.b)("path",Object(o.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(a.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("p",{parentName:"div"},"The two key components of this snippet are the ",Object(a.b)("inlineCode",{parentName:"p"},"[assembly: AppItem(...)]")," tag and the class extension ",Object(a.b)("inlineCode",{parentName:"p"},"HarmlessComponentConfiguration : VisualAppItem"),". These two pieces register the configuration with Geocortex Mobile and Autofac."))),Object(a.b)("h2",{id:"consume-the-configuration-in-the-component"},"Consume the Configuration in the Component"),Object(a.b)("p",null,"Components that consume configuration should extend ",Object(a.b)("inlineCode",{parentName:"p"},"AppItemComponentBase<ConfigurationClassType>"),". This forces them to have a constructor which takes in an ",Object(a.b)("inlineCode",{parentName:"p"},"IAppItem")," resolver for the specific configuration type. This resolver can then be called in the ",Object(a.b)("inlineCode",{parentName:"p"},"DoInitializeAsync")," method to retrieve the app config values. They should also register with Autofac using the ",Object(a.b)("inlineCode",{parentName:"p"},"AppItemComponent")," assembly attribute."),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-csharp"}),'using App1;\nusing App1.Components;\nusing App1.Configuration;\nusing Geocortex.Mobile.Composition.Layout;\nusing Geocortex.Mobile.Infrastructure.App;\nusing Geocortex.Mobile.Infrastructure.Layout;\nusing System.Threading.Tasks;\nusing System.Xml.Linq;\nusing Xamarin.Forms;\n\n[assembly: AppItemComponent(typeof(HarmlessComponent), "harmless-component", HarmlessComponentConfiguration.ConfigItemtype, XmlNamespace = XmlNamespaces.App1Namespace)]\nnamespace App1.Components\n{\n    class HarmlessComponent : AppItemComponentBase<HarmlessComponentConfiguration>\n    {\n        private HarmlessComponentViewModel _viewModel;\n\n        IAppItem<HarmlessComponentConfiguration> _appItemResolver;\n\n        public HarmlessComponent(IAppItem<HarmlessComponentConfiguration> itemResolver)\n            : base(itemResolver)\n        {\n            _appItemResolver = itemResolver;\n            _viewModel = new HarmlessComponentViewModel();\n        }\n\n        protected override VisualElement Create(XNode node)\n        {\n            return new HarmlessComponentView()\n            {\n                BindingContext = _viewModel\n            };\n        }\n\n        protected override async Task DoInitializeAsync()\n        {\n            var item = await _appItemResolver.ResolveAsync();\n            _viewModel.Title = item.ConfigTitle;\n            _viewModel.Description = item.ConfigDescription;\n        }\n    }\n}\n')),Object(a.b)("h2",{id:"define-configuration-values-in-the-appjson"},"Define Configuration Values in the app.json"),Object(a.b)("p",null,"At this point, the component is hooked up to configuration, and configuration values can be defined and consumed."),Object(a.b)("p",null,"Configuration can be defined in the ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/mobile/sdk-quick-start#editing-the-layout-and-app-config"}),"app JSON")," and linked to the component through the ",Object(a.b)("inlineCode",{parentName:"p"},"config")," attribute in layout, just like any other component."),Object(a.b)(p.a,{defaultValue:"layout",values:[{label:"layout.xml",value:"layout"},{label:"app.json",value:"json"},{label:"User Interface",value:"ui"}],mdxType:"Tabs"},Object(a.b)(r.a,{value:"layout",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-xml"}),'<?xml version="1.0" encoding="utf-8" ?>\n<layout\n    xmlns="https://geocortex.com/layout/v1"\n    xmlns:gxm="https://geocortex.com/layout/mobile/v1"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n    xsi:schemaLocation="https://geocortex.com/layout/v1 ../../ViewerFramework/layout/layout-mobile.xsd"\n    // highlight-next-line\n    xmlns:custom="https://your.org/layout/app1">\n    <gxm:taskbar>\n        \x3c!--Taskbar / custom component--\x3e\n        <panel>\n            // highlight-next-line\n            <custom:harmless-component icon="warning" config="harmless-component-config"/>\n        </panel>\n    </gxm:taskbar>\n</layout>\n'))),Object(a.b)(r.a,{value:"json",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-json"}),'{\n    "$schema": "..\\\\..\\\\ViewerFramework\\\\app-config\\\\mobile\\\\mobile-app-config.schema.json",\n    "schemaVersion": "1.0",\n    "items": [\n        {\n            "$type": "harmless-component-config",\n            "id": "harmless-component-config",\n            "title": "Title from Config",\n            "description": "This description came from config."\n        },\n        {\n            "$type": "layout",\n            "id": "desktop-layout",\n            "url": "resource://layout-large.xml",\n            "tags": ["mobile", "large"]\n        }\n    ]\n}\n'))),Object(a.b)(r.a,{value:"ui",mdxType:"TabItem"},Object(a.b)("img",{src:Object(s.a)("img/custom-configuration-final.png")}))))}b.isMDXComponent=!0},270:function(e,n,t){"use strict";t.d(n,"a",(function(){return c}));var o=t(0),i=t.n(o),a=t(253),s=t.n(a),p=t(130),r=t.n(p);function c(e){var n=e.children;return i.a.createElement("div",{className:s()(r.a.root)},n)}},271:function(e,n,t){"use strict";t.d(n,"a",(function(){return m}));t(268);var o=t(259),i=t(0),a=t.n(i),s=t(253),p=t.n(s),r=t(131),c=t.n(r);function m(e){var n=e.title,t=e.description,i=e.link;return a.a.createElement("div",{className:p()("card-demo",c.a.root)},a.a.createElement("div",{className:"card"},a.a.createElement("div",{className:"card__header"},a.a.createElement("h3",null,n)),a.a.createElement("div",{className:"card__body"},a.a.createElement("p",null,t)),a.a.createElement("div",{className:"card__footer"},a.a.createElement(o.a,{className:"button button--secondary button--block",to:i},"Get Started"))))}}}]);